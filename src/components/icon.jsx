import { Link } from "react-router-dom";
import { useSelector } from "react-redux";
const Icon = (props) => {
  const isShopping = useSelector((state) => state.changePage.value);
  const carItems = useSelector((state) => state.cartItems.itemsArrays);
  return (
    <div className="flex justify-between items-center w-full p-2.5 pr-5">
      <p className="bg-green-100 text-center absolute-center w-1/2 p-2 rounded-full">
        <a href="" className="underline ">
          Get 10% off
        </a>{" "}
        your first order! Use code: GREEN10
      </p>
      <Link to="/">
        <div className={`icon ${isShopping ? "text-green-800" : "text-white"} flex gap-2.5`}>
          <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="10%" viewBox="0 0 400 544" enableBackground="new 0 0 400 544" xmlSpace="preserve">
            <path
              fill="currentColor"
              opacity="1.000000"
              stroke="none"
              d="
    M401.000000,344.531342 
	C396.992920,365.331635 390.764160,384.902740 381.354614,403.431915 
	C370.583313,424.642639 357.283691,444.133209 341.547577,461.928558 
	C338.502960,465.371613 337.910248,468.607208 338.964417,472.840271 
	C343.158997,489.684540 345.530670,506.776855 345.348175,524.176208 
	C345.272919,531.350647 340.264282,537.881104 333.821259,539.190979 
	C325.507416,540.881226 318.832153,537.263794 315.737915,529.496155 
	C313.669708,524.304138 313.421265,518.758179 312.868256,513.351562 
	C311.635132,501.295441 310.003876,489.328308 307.880829,477.392426 
	C307.131714,473.180908 305.430054,471.474884 301.555664,471.418518 
	C272.742401,470.999390 245.384598,463.647308 218.540466,453.935028 
	C150.952530,429.481476 101.957367,385.158356 73.738380,318.537079 
	C61.883144,290.548492 52.928951,261.701355 47.926392,231.732986 
	C45.198841,215.393326 43.169392,198.936020 41.546200,182.420029 
	C38.334045,149.736221 36.397911,116.858849 27.723774,84.923470 
	C23.349739,68.819672 17.747238,53.202385 10.743984,38.071419 
	C9.690909,35.796185 8.399277,33.706169 6.840084,31.712849 
	C2.534934,26.209009 2.040541,19.901533 4.862039,13.829716 
	C7.609333,7.917582 12.740668,5.094394 19.528131,5.602371 
	C33.613464,6.656524 47.565758,8.737211 61.447620,11.210008 
	C75.337799,13.684284 89.087685,16.854757 102.761940,20.377193 
	C129.990723,27.391224 156.683411,35.988422 182.687042,46.702026 
	C220.581619,62.314747 256.435516,81.618790 289.146973,106.415054 
	C329.362976,136.900009 361.810486,173.963120 382.686035,220.282135 
	C390.623718,237.894348 395.669373,256.572632 399.367249,275.565735 
	C399.681152,277.178101 400.270233,278.736847 400.865723,280.660248 
	C401.000000,302.020905 401.000000,323.041779 401.000000,344.531342 
    M301.478180,439.338776 
	C295.215118,407.493530 284.250458,377.190887 271.343170,347.526794 
	C270.749969,346.163513 270.324066,344.664673 268.998383,343.764832 
	C263.211548,339.836853 258.063995,335.068390 252.101913,331.342621 
	C228.111420,316.350647 202.176880,305.545105 175.837418,295.591217 
	C167.760422,292.538818 159.385742,290.135254 151.616638,286.446289 
	C143.936478,282.799530 141.409714,274.352448 144.558289,266.799042 
	C147.613510,259.469513 155.489075,255.907562 163.634308,258.303833 
	C166.822357,259.241730 169.946732,260.412445 173.061783,261.579376 
	C193.772171,269.337891 214.507202,277.031555 234.405655,286.778015 
	C238.311844,288.691315 241.367172,292.286591 246.316605,293.090851 
	C246.472046,289.752319 244.547424,287.806000 243.116211,285.683990 
	C238.181564,278.367523 232.945648,271.240417 228.292267,263.750549 
	C210.131897,234.520523 189.356964,207.273819 166.622543,181.480560 
	C158.464005,172.224319 149.572342,163.678696 141.068512,154.759628 
	C134.997986,148.392639 135.261322,139.263611 141.081345,133.623657 
	C147.860672,127.054085 157.723068,126.728737 163.913666,132.899185 
	C182.097595,151.023926 199.161133,170.071014 214.648148,190.631271 
	C239.731827,223.931915 264.399261,257.440063 283.154175,294.869995 
	C303.443542,335.362183 318.475067,377.767883 329.249847,421.717316 
	C329.602295,423.154999 329.504272,424.769226 331.372681,425.306030 
	C333.306915,424.705750 334.161682,423.028137 335.108429,421.482910 
	C338.502136,415.944092 341.854095,410.379730 345.230560,404.830353 
	C370.429443,363.415161 377.667542,318.825836 366.228943,271.959503 
	C355.554810,228.225189 334.077393,190.096619 301.688416,158.358307 
	C257.230988,114.793930 203.741364,86.490074 145.826584,65.627724 
	C117.481445,55.417091 88.415878,47.748238 58.858166,41.970123 
	C55.084053,41.232338 51.273006,39.393265 47.336891,40.945465 
	C46.849876,42.377014 47.291100,43.484570 47.724094,44.548435 
	C62.817276,81.632492 68.275589,120.701172 71.253853,160.225632 
	C72.662956,178.925812 74.695496,197.552979 77.616699,216.043152 
	C82.642517,247.854797 91.749191,278.512451 104.333588,308.231628 
	C115.875748,335.489471 131.508514,359.897125 153.299942,379.840424 
	C179.813065,404.104950 211.757065,418.879944 245.650696,429.825165 
	C261.965607,435.093689 278.684357,438.541565 295.554291,441.354187 
	C297.571442,441.690460 299.895416,442.574738 301.478180,439.338776 
z"
            />
          </svg>
          <p className="uppercase text-xl">
            Plant <br />
            Shop
          </p>
        </div>
      </Link>

      <div
        className="relative w-fit group cursor-pointer"
        onClick={() => {
          props.setIsOpenCart(true);
        }}
      >
        <p className={`absolute ${isShopping ? "text-green-800" : "text-white"} top-1/2 left-1/2 translate-x-[-35%] translate-y-[-60%] ${isShopping ? "group-hover:text-white" : "group-hover:text-black"} font-medium`}>{carItems.length !== 0 ? carItems.reduce((total, item) => total + item.quantity, 0) : 0}</p>
        <svg className={isShopping ? "text-green-800" : "text-white"} width="30px" height="30px" viewBox="0 0 0.563 0.563" xmlns="http://www.w3.org/2000/svg">
          <path className="transition-opacity duration-150 opacity-100 ease-in-out group-hover:opacity-0" d="m0.019 0.019 0.022 0.075m0 0 0.09 0.3h0.412v-0.225a0.075 0.075 0 0 0 -0.075 -0.075zm0.427 0.45a0.037 0.037 0 1 1 0 -0.075 0.037 0.037 0 0 1 0 0.075Zm-0.3 -0.037a0.037 0.037 0 1 1 0.075 0 0.037 0.037 0 0 1 -0.075 0Z" stroke="currentColor" strokeWidth="0.0375" fill="none" />

          <path className="transition-opacity duration-150 opacity-0 ease-in-out group-hover:opacity-100" d="M0.037 0.013 0.001 0.024 0.117 0.412H0.563V0.169A0.094 0.094 0 0 0 0.469 0.075H0.055z" fill="currentColor" />

          <path className="transition-opacity duration-150 opacity-0 ease-in-out group-hover:opacity-100" fillRule="evenodd" clipRule="evenodd" d="M0.206 0.45a0.056 0.056 0 1 0 0 0.112 0.056 0.056 0 0 0 0 -0.112M0.188 0.506a0.019 0.019 0 1 1 0.037 0 0.019 0.019 0 0 1 -0.037 0" fill="currentColor" />

          <path className="transition-opacity duration-150 opacity-0 ease-in-out group-hover:opacity-100" fillRule="evenodd" clipRule="evenodd" d="M0.469 0.45a0.056 0.056 0 1 0 0 0.112 0.056 0.056 0 0 0 0 -0.112m-0.019 0.056a0.019 0.019 0 1 1 0.037 0 0.019 0.019 0 0 1 -0.037 0" fill="currentColor" />
        </svg>
      </div>
    </div>
  );
};

export default Icon;
